package org.example.intern.project.algo;

public class SlidingWindowUtils {
    private SlidingWindowUtils() {
        throw new UnsupportedOperationException("Don't instantiate utility class");
    }

    public static void main(String[] args) {
        System.out.println(findMinimumSizeSubarraySum(7, new int[]{2, 3, 1, 2, 4, 3}));
    }

    /*
    ‚è± –ë–ª–æ–∫ 1 (‚âà1 —á–∞—Å): FAANG-–¥–µ–ª—å—Ç–∞ ‚Äî —Ä–∞–∑–º–∏–Ω–∫–∞

üìå –£—Ä–æ–≤–µ–Ω—å: Intern
üß© –ó–∞–¥–∞—á–∞ 1: Minimum Size Subarray Sum (sliding window)
üéØ –¶–µ–ª—å: –æ—Å–≤–æ–∏—Ç—å —Å–∫–æ–ª—å–∑—è—â–µ–µ –æ–∫–Ω–æ, –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏
üß™ –û–∂–∏–¥–∞–Ω–∏—è:

–í—Ö–æ–¥: int target, int[] nums (>=0)

–í—ã—Ö–æ–¥: –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ —Å —Å—É–º–º–æ–π ‚â• target (–∏–ª–∏ 0, –µ—Å–ª–∏ –Ω–µ—Ç)

–°–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), –ø–∞–º—è—Ç—å O(1)

–¢–µ—Å—Ç—ã:

target=7, nums=[2,3,1,2,4,3] ‚Üí 2 (–ø–æ–¥–º–∞—Å—Å–∏–≤ [4,3])

–∫—Ä–∞–π–Ω–∏–µ: –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ; –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç —Ä–∞–≤–µ–Ω target; –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –æ–∫–Ω–æ —Ç–æ–ª—å–∫–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å/—Å–∂–∏–º–∞—Ç—å –ø–æ –ø–æ—Ä—è–¥–∫—É; –Ω–∏–∫–∞–∫–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
     */
    public static int findMinimumSizeSubarraySum(int target, int[] nums) {
        int right = 0;
        int left = 0;

        int result = 0;
        int sum = 0;

        if (nums.length <= 1) return 1;

        while (right < nums.length - 1) {
            right++;
            result += 1;
            if ((nums[left] == target || nums[right] == target)) {
                return 1;
            } else if (sum + nums[right] == target) {
                result++;
                sum = 0;
            } else if (sum + nums[right] > target) {
                left = right;
                result = 0;
                sum = 0;
            }
            sum += nums[right];
        }

        return result;
    }
}
